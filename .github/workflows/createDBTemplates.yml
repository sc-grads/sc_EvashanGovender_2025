name: Reusable Code

on:
  workflow_call:
    inputs:
      Job_type:
        required: true
        type: string
      SQL_server:
        required: true
        type: string
      SQL_user:
        required: true
        type: string
      SQL_password:
        required: true
        type: string

jobs:
  setup-and-run:
    runs-on: ubuntu-latest
    environment: 
      name: ${{ inputs.Job_type == 'Production' && 'AP-Approval' || 'Development' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Cache SQL Server tools
        id: cache-sql-tools
        uses: actions/cache@v3
        with:
          path: |
            /opt/mssql-tools
            /etc/apt/sources.list.d/msprod.list
          key: ${{ runner.os }}-sql-tools-${{ hashFiles('**/*.sql') }}
          restore-keys: |
            ${{ runner.os }}-sql-tools-

      - name: Add Microsoft repository for SQL Server tools
        if: steps.cache-sql-tools.outputs.cache-hit != 'true'
        run: |
          sudo apt-get update
          sudo apt-get install -y curl
          curl https://packages.microsoft.com/keys/microsoft.asc | sudo apt-key add -
          curl https://packages.microsoft.com/config/ubuntu/20.04/prod.list | sudo tee /etc/apt/sources.list.d/msprod.list
          sudo apt-get update

      - name: Install SQL Server client
        if: steps.cache-sql-tools.outputs.cache-hit != 'true'
        run: sudo apt-get install -y mssql-tools unixodbc-dev

      - name: Add SQL Server tools to PATH
        run: echo "/opt/mssql-tools/bin" >> $GITHUB_PATH

      - name: Run SQL Automation
        run: |
          sqlcmd -S "${{ inputs.SQL_server }}" -U "${{ inputs.SQL_user }}" -P "${{ inputs.SQL_password }}" -i ./DatabaseAdministration/DBAutomation/sql_setup.sql
